version: '3.8'

services:
  # Servicio de la base de datos PostgreSQL
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: bd_challenge
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: herbert
    ports:
      - "5432:5432"
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - network

  # Servicio de RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"   # Puerto para las conexiones de aplicaciones
      - "15672:15672" # Puerto para la interfaz de gestión
    networks:
      - network
  
  # Servicio de la aplicación client Spring Boot
  client-service:
    build:
      context: ./client # Define el contexto de construcción
      dockerfile: Dockerfile # Define el Dockerfile
    ports:
      - "8080:8080" # Mapea el puerto 8080 del contenedor al host
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/bd_challenge
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: herbert
      SPRING_RABBITMQ_HOST: rabbitmq
      POSTGRES_PORT:
    depends_on:
      - db
      - rabbitmq
    networks:
      - network

  # Servicio de la aplicación account Spring Boot
  account-service:
    build:
      context: ./account # Define el contexto de construcción
      dockerfile: Dockerfile # Define el Dockerfile
    ports:
      - "9090:8080" # Mapea el puerto 9090 del contenedor al host
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/bd_challenge
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: herbert
      SPRING_RABBITMQ_HOST: rabbitmq
      POSTGRES_PORT:
    depends_on:
      - db
      - rabbitmq
    networks:
      - network

# Definición de red compartida entre servicios
networks:
  network:
    driver: bridge